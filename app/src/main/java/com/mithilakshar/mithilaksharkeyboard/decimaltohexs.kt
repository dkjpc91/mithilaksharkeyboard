package com.mithilakshar.mithilaksharkeyboard

class decimaltohexs {

    private val surrogatePairMap = mapOf(
        //numbers
        73808 to "\uD805\uDCD0",  // ЁСУР
        73809 to "\uD805\uDCD1",// ЁСУС
        73810 to "\uD805\uDCD2",// ЁСУТ
        73811 to "\uD805\uDCD3",// ЁСУУ
        73812 to "\uD805\uDCD4", // ЁСУФ
        73813 to "\uD805\uDCD5",// ЁСУХ
        73814 to "\uD805\uDCD6",// ЁСУЦ
        73815 to "\uD805\uDCD7", // ЁСУЧ
        73816 to "\uD805\uDCD8",// ЁСУШ
        73817 to "\uD805\uDCD9", // ЁСУЩ

        //vowels
        73568 to "\uD805\uDC80",//ЁСТА
        73569 to "\uD805\uDC81", //ЁСТБ
        73570 to "\uD805\uDC82", //ЁСТВ
        73571 to "\uD805\uDC83", //ЁСТГ
        73572 to "\uD805\uDC84", //ЁСТД
        73573 to "\uD805\uDC85", // ЁСТЕ
        73574 to "\uD805\uDC86", // ЁСТЖ
        73575 to "\uD805\uDC87", // ЁСТЗ
        73576 to "\uD805\uDC88", // ЁСТИ
        73577 to "\uD805\uDC89", // ЁСТЙ
         73578 to "\uD805\uDC8A", // ЁСТК
        73579 to "\uD805\uDC8B", // ЁСТЛ
        73580 to "\uD805\uDC8C", // ЁСТМ
        73581 to "\uD805\uDC8D", // ЁСТН
        73582 to "\uD805\uDC8E", // ЁСТО

        //Consonent
        73583 to "\uD805\uDC8F", // ЁСТП
        73584 to "\uD805\uDC90", // ЁСТР
        73585 to "\uD805\uDC91", // ЁСТС
        73586 to "\uD805\uDC92", // ЁСТТ
        73587 to "\uD805\uDC93", // ЁСТУ

        73588 to "\uD805\uDC94", // ЁСТФ
        73589 to "\uD805\uDC95", // ЁСТХ
        73590 to "\uD805\uDC96", //  ЁСТЦ
        73591 to "\uD805\uDC97", //  ЁСТЧ
        73592 to "\uD805\uDC98", //  ЁСТШ


        //
        73593 to "\uD805\uDC99", // ЁСТЩ
        73594 to "\uD805\uDC9A", // ЁСТЪ
        73595 to "\uD805\uDC9B", // ЁСТЫ
        73596 to "\uD805\uDC9C", // ЁСТЬ
        73597 to "\uD805\uDC9D", // ЁСТЭ

        73598 to "\uD805\uDC99", // ЁСТЮ
        73599 to "\uD805\uDC9A", // ЁСТЯ
        73600 to "\uD805\uDC9B", // ЁСТа
        73601 to "\uD805\uDC9C", // ЁСТб
        73602 to "\uD805\uDC9D", // ЁСТв

        73598 to "\uD805\uDC99", // ЁСТг
        73599 to "\uD805\uDC9A", // ЁСТд
        73600 to "\uD805\uDC9B", // ЁСТе
        73601 to "\uD805\uDC9C", // ЁСТж
        73602 to "\uD805\uDC9D", // ЁСТз

        73598 to "\uD805\uDC99", // ЁСТи
        73599 to "\uD805\uDC9A", // ЁСТй
        73600 to "\uD805\uDC9B", // ЁСТк
        73601 to "\uD805\uDC9C", // ЁСТл
        73602 to "\uD805\uDC9D", // ЁСТм

        73598 to "\uD805\uDC99", // ЁСТн
        73599 to "\uD805\uDC9A", // ЁСТо
        73600 to "\uD805\uDC9B", // ЁСТп


        73703 to  "\uD805\uDCC7", //ЁСУЗ
        128054 to  "\uD83D\uDC36", //ЁЯР╢
        -44 to  "", //ЁЯР╢
        73406 to "\uD805\uDCBE", //ЁСТ╛

        //matra
        73408 to "\uD805\uDCB0", // ЁСТ░
        73409 to "\uD805\uDCB1", // ЁСТ▒
        73410 to "\uD805\uDCB2", // ЁСТ▓
        73411 to "\uD805\uDCB3", // ЁСТ│
        73412 to "\uD805\uDCB4", // ЁСТ┤
        73413 to "\uD805\uDCB5", // ЁСТ╡
        73414 to "\uD805\uDCB6", // ЁСТ╢
        73415 to "\uD805\uDCB7", // ЁСТ╖
        73416 to "\uD805\uDCB8", // ЁСТ╕
        73417 to "\uD805\uDCB9", // ЁСТ╣
        73418 to "\uD805\uDCBA", // ЁСТ║
        73419 to "\uD805\uDCBB", // ЁСТ╗
        73420 to "\uD805\uDCBC", // ЁСТ╝
        73421 to "\uD805\uDCBD", // ЁСТ╜
        73422 to "\uD805\uDCBE"  ,// ЁСТ╛

        73408 to "\uD805\uDCB0", //  ЁСТ┐
        73408 to "\uD805\uDCB0", // ЁСУА
        73408 to "\uD805\uDCB0", // ЁСУБ
        73408 to "\uD805\uDCB0", // ЁСУВ
        73408 to "\uD805\uDCB0", // ЁСУГ
        73408 to "\uD805\uDCB0", // ЁСУД
        73408 to "\uD805\uDCB0", // ЁСУЕ
        73408 to "\uD805\uDCB0", // ЁСУЖ



        // Vowels
        2309 to "\uD805\uDC80", // рдЕ (U+0905) to ЁССА (U+11480)
        2310 to "\uD805\uDC81", // рдЖ (U+0906) to ЁССБ (U+11481)
        2311 to "\uD805\uDC82", // рдЗ (U+0907) to ЁССВ (U+11482)
        2312 to "\uD805\uDC83", // рдИ (U+0908) to ЁССГ (U+11483)
        2313 to "\uD805\uDC84", // рдЙ (U+0909) to ЁССД (U+11484)
        2314 to "\uD805\uDC85", // рдК (U+090A) to ЁССЕ (U+11485)
        2315 to "\uD805\uDC86", // рдЛ (U+090B) to ЁССЖ (U+11486)
        2316 to "\uD805\uDC87", // реа (U+090C) to ЁССЗ (U+11487)
        2317 to "\uD805\uDC88", // рдМ (U+090D) to ЁССИ (U+11488)
        2318 to "\uD805\uDC89", // реб (U+090F) to ЁССЙ (U+11489)

        // Consonants
        2325 to "\uD805\uDC8A", // рдХ (U+0915) to ЁСТК (U+1148A)
        2326 to "\uD805\uDC8B", // рдЦ (U+0916) to ЁСТЛ (U+1148B)
        2327 to "\uD805\uDC8C", // рдЧ (U+0917) to ЁСТМ (U+1148C)
        2328 to "\uD805\uDC8D", // рдШ (U+0918) to ЁСТН (U+1148D)
        2329 to "\uD805\uDC8E", // рдЩ (U+0919) to ЁСТО (U+1148E)

        2330 to "\uD805\uDC8F", // рдЪ (U+091A) to ЁСТП (U+1148F)
        2331 to "\uD805\uDC90", // рдЫ (U+091B) to ЁСТР (U+11490)
        2332 to "\uD805\uDC91", // рдЬ (U+091C) to ЁСТС (U+11491)
        2333 to "\uD805\uDC92", // рдЭ (U+091D) to ЁСТТ (U+11492)
        2334 to "\uD805\uDC93", // рдЮ (U+091E) to ЁСТУ (U+11493)

        2335 to "\uD805\uDC94", // рдЯ (U+091F) to ЁСТФ (U+11494)
        2336 to "\uD805\uDC95", // рда (U+0920) to ЁСТХ (U+11495)
        2337 to "\uD805\uDC96", // рдб (U+0921) to ЁСТЦ (U+11496)
        2338 to "\uD805\uDC97", // рдв (U+0922) to ЁСТЧ (U+11497)
        2339 to "\uD805\uDC98", // рдг (U+0923) to ЁСТШ (U+11498)

        2340 to "\uD805\uDC99", // рдд (U+0924) to ЁСТЩ (U+11499)
        2341 to "\uD805\uDC9A", // рде (U+0925) to ЁСТЪ (U+1149A)
        2342 to "\uD805\uDC9B", // рдж (U+0926) to ЁСТЫ (U+1149B)
        2343 to "\uD805\uDC9C", // рдз (U+0927) to ЁСТЬ (U+1149C)
        2344 to "\uD805\uDC9D", // рди (U+0928) to ЁСТЭ (U+1149D)

        2345 to "\uD805\uDCA0", // рдк (U+092A) to ЁСТа (U+114A0)
        2346 to "\uD805\uDCA1", // рдл (U+092B) to ЁСТб (U+114A1)
        2347 to "\uD805\uDCA2", // рдм (U+092C) to ЁСТв (U+114A2)
        2348 to "\uD805\uDCA3", // рдн (U+092D) to ЁСТг (U+114A3)
        2349 to "\uD805\uDCA4", // рдо (U+092E) to ЁСТд (U+114A4)

        2350 to "\uD805\uDCA5", // рдп (U+092F) to ЁСТе (U+114A5)
        2351 to "\uD805\uDCA6", // рд░ (U+0930) to ЁСТж (U+114A6)
        2352 to "\uD805\uDCA7", // рд▓ (U+0932) to ЁСТз (U+114A7)
        2353 to "\uD805\uDCA8", // рд╡ (U+0935) to ЁСТи (U+114A8)
        2354 to "\uD805\uDCA9", // рд╢ (U+0937) to ЁСТй (U+114A9)

        2355 to "\uD805\uDCAA", // рд╖ (U+0937) to ЁСТк (U+114AA)
        2356 to "\uD805\uDCAB", // рд╕ (U+0938) to ЁСТл (U+114AB)
        2357 to "\uD805\uDCAC", // рд╣ (U+0939) to ЁСТм (U+114AC)

        // Additional characters
        2309 to "\uD805\uDCC0", // рдЕрдВ (U+0905 U+0902) to ЁССА (U+11480)
        2357 to "\uD805\uDCC1",  // рдЕрдГ (U+0905 U+0939) to ЁССБ (U+11481)

        // Lowercase English letters
        97 to "\uD805\uDC81", // 'a'
        98 to "\uD805\uDCB0", // 'b'
        99 to "\uD805\uDC91", // 'c'
        100 to "\uD805\uDC92", // 'd'
        101 to "\uD805\uDC93", // 'e'
        102 to "\uD805\uDC94", // 'f'
        103 to "\uD805\uDC95", // 'g'
        104 to "\uD805\uDC96", // 'h'
        105 to "\uD805\uDC97", // 'i'
        106 to "\uD805\uDC98", // 'j'
        107 to "\uD805\uDC99", // 'k'
        108 to "\uD805\uDC9A", // 'l'
        109 to "\uD805\uDC9B", // 'm'
        110 to "\uD805\uDC9C", // 'n'
        111 to "\uD805\uDC9D", // 'o'
        112 to "\uD805\uDC9E", // 'p'
        113 to "\uD805\uDC9F", // 'q'
        114 to "\uD805\uDCA0", // 'r'
        115 to "\uD805\uDCA1", // 's'
        116 to "\uD805\uDCA2", // 't'
        117 to "\uD805\uDCA3", // 'u'
        118 to "\uD805\uDCA4", // 'v'
        119 to "\uD805\uDCA5", // 'w'
        120 to "\uD805\uDCA6", // 'x'
        121 to "\uD805\uDCA7", // 'y'
        122 to "\uD805\uDCA8", // 'z'

        // Uppercase English letters
        65 to "\uD805\uDC8F", // 'A'
        66 to "\uD805\uDC90", // 'B'
        67 to "\uD805\uDC91", // 'C'
        68 to "\uD805\uDC92", // 'D'
        69 to "\uD805\uDC93", // 'E'
        70 to "\uD805\uDC94", // 'F'
        71 to "\uD805\uDC95", // 'G'
        72 to "\uD805\uDC96", // 'H'
        73 to "\uD805\uDC97", // 'I'
        74 to "\uD805\uDC98", // 'J'
        75 to "\uD805\uDC99", // 'K'
        76 to "\uD805\uDC9A", // 'L'
        77 to "\uD805\uDC9B", // 'M'
        78 to "\uD805\uDC9C", // 'N'
        79 to "\uD805\uDC9D", // 'O'
        80 to "\uD805\uDC9E", // 'P'
        81 to "\uD805\uDC9F", // 'Q'
        82 to "\uD805\uDCA0", // 'R'
        83 to "\uD805\uDCA1", // 'S'
        84 to "\uD805\uDCA2", // 'T'
        85 to "\uD805\uDCA3", // 'U'
        86 to "\uD805\uDCA4", // 'V'
        87 to "\uD805\uDCA5", // 'W'
        88 to "\uD805\uDCA6", // 'X'
        89 to "\uD805\uDCA7", // 'Y'
        90 to "\uD805\uDCA8"  // 'Z'


        )

    fun getdecimaltohexsurrogate(code: Int): String? {
        return surrogatePairMap[code]
    }

    private val englishToTirhutaMap = mapOf(
        // Lowercase English letters to Tirhuta characters
        'a' to "\uD805\uDC8F", // ЁСТП
        'b' to "\uD805\uDC90", // ЁСТР
        'c' to "\uD805\uDC91", // ЁСТС
        'd' to "\uD805\uDC92", // ЁСТТ
        'e' to "\uD805\uDC93", // ЁСТУ
        'f' to "\uD805\uDC94", // ЁСТФ
        'g' to "\uD805\uDC95", // ЁСТХ
        'h' to "\uD805\uDC96", // ЁСТЦ
        'i' to "\uD805\uDC97", // ЁСТЧ
        'j' to "\uD805\uDC98", // ЁСТШ
        'k' to "\uD805\uDC99", // ЁСТЩ
        'l' to "\uD805\uDC9A", // ЁСТЪ
        'm' to "\uD805\uDC9B", // ЁСТЫ
        'n' to "\uD805\uDC9C", // ЁСТЬ
        'o' to "\uD805\uDC9D", // ЁСТЭ
        'p' to "\uD805\uDC9E", // ЁСТЮ
        'q' to "\uD805\uDC9F", // ЁСТЯ
        'r' to "\uD805\uDCA0", // ЁСТа
        's' to "\uD805\uDCA1", // ЁСТб
        't' to "\uD805\uDCA2", // ЁСТв
        'u' to "\uD805\uDCA3", // ЁСТг
        'v' to "\uD805\uDCA4", // ЁСТд
        'w' to "\uD805\uDCA5", // ЁСТе
        'x' to "\uD805\uDCA6", // ЁСТж
        'y' to "\uD805\uDCA7", // ЁСТз
        'z' to "\uD805\uDCA8", // ЁСТи

        // Uppercase English letters to Tirhuta characters
        'A' to "\uD805\uDC8F", // ЁСТП
        'B' to "\uD805\uDC90", // ЁСТР
        'C' to "\uD805\uDC91", // ЁСТС
        'D' to "\uD805\uDC92", // ЁСТТ
        'E' to "\uD805\uDC93", // ЁСТУ
        'F' to "\uD805\uDC94", // ЁСТФ
        'G' to "\uD805\uDC95", // ЁСТХ
        'H' to "\uD805\uDC96", // ЁСТЦ
        'I' to "\uD805\uDC97", // ЁСТЧ
        'J' to "\uD805\uDC98", // ЁСТШ
        'K' to "\uD805\uDC99", // ЁСТЩ
        'L' to "\uD805\uDC9A", // ЁСТЪ
        'M' to "\uD805\uDC9B", // ЁСТЫ
        'N' to "\uD805\uDC9C", // ЁСТЬ
        'O' to "\uD805\uDC9D", // ЁСТЭ
        'P' to "\uD805\uDC9E", // ЁСТЮ
        'Q' to "\uD805\uDC9F", // ЁСТЯ
        'R' to "\uD805\uDCA0", // ЁСТа
        'S' to "\uD805\uDCA1", // ЁСТб
        'T' to "\uD805\uDCA2", // ЁСТв
        'U' to "\uD805\uDCA3", // ЁСТг
        'V' to "\uD805\uDCA4", // ЁСТд
        'W' to "\uD805\uDCA5", // ЁСТе
        'X' to "\uD805\uDCA6", // ЁСТж
        'Y' to "\uD805\uDCA7", // ЁСТз
        'Z' to "\uD805\uDCA8"  // ЁСТи
    )
    fun getTirhutaCharacterFromEnglish(char: Char): String {
        return englishToTirhutaMap[char] ?: "Unknown Character"
    }









}